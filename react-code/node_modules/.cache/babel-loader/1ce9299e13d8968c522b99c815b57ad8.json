{"ast":null,"code":"var _jsxFileName = \"/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/pages/Labs/ImageSlider.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport React, { useEffect, useState, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageArray = [{\n  id: \"1\",\n  src: \"../../images/dk_w_rld_logo1.jpg\"\n}, {\n  id: \"2\",\n  src: \"../../images/dk_w_rld_logo2.jpg\"\n}, {\n  id: \"3\",\n  src: \"../../images/dk_w_rld_logo3.jpg\"\n}, {\n  id: \"4\",\n  src: \"../../images/dk_w_rld_logo4.jpg\"\n}];\nconst Container = styled.div`\n  position: relative;\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  overflow: hidden;\n  transform: translateY(50px);\n  opacity: 1;\n`;\n_c = Container;\nconst SliderContainer = styled.div`\n  width: 500px;\n  height: 500px;\n  display: flex;\n  border: 1px solid red;\n`;\n_c2 = SliderContainer;\nconst Button = styled.button`\n  background-color: white;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: ${props => props.direction === 'prev' && '1%'};\n  right: ${props => props.direction === 'next' && '1%'};\n  z-index: 200;\n\n  img {\n    width: 25%;\n    height: 25%;\n  }\n`;\n_c3 = Button;\n\nconst Btn = ({\n  direction,\n  onClick,\n  img\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onClick,\n    direction: direction,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Btn;\nconst ImageSlider = /*#__PURE__*/forwardRef(_c5 = _s((props, ref) => {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideRef = useRef(null);\n  const {\n    arr\n  } = props;\n  const slides = 4; // For total 8 images\n\n  const handleNext = () => {\n    if (currentSlide >= slides - 1) {\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentSlide === 0) {\n      setCurrentSlide(slides - 1);\n    } else {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  useEffect(() => {\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`;\n    console.log(currentSlide);\n  }, [currentSlide]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(SliderContainer, {\n      ref: slideRef,\n      children: props.map(() => {\n        /*#__PURE__*/\n        _jsxDEV(\"img\", {\n          src: src,\n          alt: \"something\"\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      direction: \"prev\",\n      onClick: handlePrev,\n      value: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      direction: \"next\",\n      onClick: handleNext,\n      value: \"prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}, \"xy2PVioj/ON15QwG9Cc5eBSPOO0=\"));\n_c6 = ImageSlider;\nexport default ImageSlider;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SliderContainer\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Btn\");\n$RefreshReg$(_c5, \"ImageSlider$forwardRef\");\n$RefreshReg$(_c6, \"ImageSlider\");","map":{"version":3,"sources":["/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/pages/Labs/ImageSlider.js"],"names":["render","React","useEffect","useState","useRef","forwardRef","styled","imageArray","id","src","Container","div","SliderContainer","Button","button","props","direction","Btn","onClick","img","ImageSlider","ref","currentSlide","setCurrentSlide","slideRef","arr","slides","handleNext","handlePrev","current","style","transition","transform","console","log","map"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { useEffect, useState, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\n\nconst imageArray = [\n    {\n        id: \"1\",\n        src:\"../../images/dk_w_rld_logo1.jpg\"\n    },\n    {\n        id: \"2\",\n        src:\"../../images/dk_w_rld_logo2.jpg\"\n    },\n    {\n        id: \"3\",\n        src:\"../../images/dk_w_rld_logo3.jpg\"\n    },\n    {\n        id: \"4\",\n        src:\"../../images/dk_w_rld_logo4.jpg\"\n    },\n]\n\nconst Container = styled.div`\n  position: relative;\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  overflow: hidden;\n  transform: translateY(50px);\n  opacity: 1;\n`;\n\nconst SliderContainer = styled.div`\n  width: 500px;\n  height: 500px;\n  display: flex;\n  border: 1px solid red;\n`;\n\nconst Button = styled.button`\n  background-color: white;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: ${(props) => props.direction === 'prev' && '1%'};\n  right: ${(props) => props.direction === 'next' && '1%'};\n  z-index: 200;\n\n  img {\n    width: 25%;\n    height: 25%;\n  }\n`;\n\nconst Btn = ({ direction, onClick, img }) => {\n  return (\n    <Button onClick={onClick} direction={direction}>\n      <img src={img} />\n    </Button>\n  );\n};\n\nconst ImageSlider = forwardRef((props, ref) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideRef = useRef(null);\n\n  const { arr } = props;\n  const slides = 4; // For total 8 images\n\n  const handleNext = () => {\n    if (currentSlide >= slides-1) {\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentSlide === 0) {\n      setCurrentSlide(slides-1);\n    } else {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  useEffect(() => {\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`;\n    console.log(currentSlide)\n  }, [currentSlide]);\n\n\n\n  return (\n    <Container ref={ref}>\n      <SliderContainer ref={slideRef}>\n        {props.map(()=>{\n            <img key={id} src={src} \n            alt=\"something\" />\n        })}\n      </SliderContainer>\n      \n      <Btn direction=\"prev\" onClick={handlePrev} value=\"next\" />\n      <Btn direction=\"next\" onClick={handleNext} value=\"prev\"/>\n    </Container>\n  );\n});\n\nexport default ImageSlider;"]},"metadata":{},"sourceType":"module"}