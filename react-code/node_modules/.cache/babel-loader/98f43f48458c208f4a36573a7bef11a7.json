{"ast":null,"code":"var _jsxFileName = \"/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/WorkImg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIZES = {\n  over: 'workimg--oversize',\n  max: 'workimg--maxsize',\n  card: 'workimg--cardsize'\n};\nvar imgbox = null;\n\nfunction WorkImg({\n  src,\n  size\n}) {\n  _s();\n\n  const imgSize = SIZES[size];\n  const overSizebox = useRef(null);\n  useEffect(() => {\n    console.log(overSizebox.current);\n    console.log(overSizebox);\n  });\n\n  const resizeBlankbox = () => {};\n\n  if (size === 'over') {\n    imgbox = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this);\n  } else {\n    imgbox = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: overSizebox,\n      className: imgSize,\n      src: src,\n      alt: \"Work Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), imgbox]\n  }, void 0, true);\n}\n\n_s(WorkImg, \"5w3QSm0BC7VjV87VPfBuiz8g2hk=\");\n\n_c = WorkImg;\nexport default WorkImg;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkImg\");","map":{"version":3,"sources":["/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/WorkImg.js"],"names":["React","useEffect","useRef","SIZES","over","max","card","imgbox","WorkImg","src","size","imgSize","overSizebox","console","log","current","resizeBlankbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,mBADI;AAEVC,EAAAA,GAAG,EAAE,kBAFK;AAGVC,EAAAA,IAAI,EAAE;AAHI,CAAd;AAMA,IAAIC,MAAM,GAAG,IAAb;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAjB,EAA8B;AAAA;;AAC1B,QAAMC,OAAO,GAAGR,KAAK,CAACO,IAAD,CAArB;AACA,QAAME,WAAW,GAAGV,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,OAAxB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACH,GAHQ,CAAT;;AAKA,QAAMI,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,MAAGN,IAAI,KAAG,MAAV,EAAiB;AACbH,IAAAA,MAAM,gBAAG;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAT;AAEH,GAHD,MAGO;AACHA,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,sBACI;AAAA,4BACA;AAAK,MAAA,GAAG,EAAEK,WAAV;AAAuB,MAAA,SAAS,EAAED,OAAlC;AAA2C,MAAA,GAAG,EAAEF,GAAhD;AAAqD,MAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADA,EAECF,MAFD;AAAA,kBADJ;AAMH;;GAzBQC,O;;KAAAA,O;AA2BT,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useRef} from 'react'\n\nconst SIZES = {\n    over: 'workimg--oversize',\n    max: 'workimg--maxsize',\n    card: 'workimg--cardsize'\n};\n\nvar imgbox = null;\n\nfunction WorkImg({src, size}) {\n    const imgSize = SIZES[size];\n    const overSizebox = useRef(null);\n\n    useEffect(() => {\n        console.log(overSizebox.current);\n        console.log(overSizebox);\n    })\n\n    const resizeBlankbox = () => {\n        \n    }\n\n    if(size==='over'){\n        imgbox = <div className=\"blank\"></div>;\n\n    } else {\n        imgbox = null;\n    }\n    return (\n        <>\n        <img ref={overSizebox} className={imgSize} src={src} alt=\"Work Image\" />\n        {imgbox}\n        </>\n    )\n}\n\nexport default WorkImg;\n"]},"metadata":{},"sourceType":"module"}