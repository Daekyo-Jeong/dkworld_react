{"ast":null,"code":"var _jsxFileName = \"/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/WorkImageBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIZES = {\n  over: 'work-img--oversize',\n  max: 'work-img--maxsize',\n  card: 'work-img--cardsize'\n};\nvar imgbox = null;\n\nfunction WorkImageBox({\n  src,\n  size\n}) {\n  _s();\n\n  const imgSize = SIZES[size];\n  const workImgBox = useRef(null);\n  var blanksize = {};\n\n  if (window.innerWidth <= 960) {\n    blanksize = {\n      marginBottom: window.innerWidth * 9 / 16 + 180\n    };\n  } else if (window.innerWidth > 960) {\n    blanksize = {\n      marginBottom: window.innerWidth * 9 / 16 + 270\n    };\n  }\n\n  useEffect(() => {\n    console.log(window.innerWidth);\n  });\n\n  const resizeBlankbox = () => {\n    console.log(\"hello world\");\n\n    if (window.innerWidth <= 960) {\n      blanksize = {\n        marginBottom: window.innerWidth * 9 / 16 + 180\n      };\n    } else if (window.innerWidth > 960) {\n      blanksize = {\n        marginBottom: window.innerWidth * 9 / 16 + 270\n      };\n    }\n  };\n\n  window.addEventListener('resize', resizeBlankbox);\n\n  if (size === 'over') {\n    imgbox = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: workImgBox,\n        className: imgSize,\n        src: src,\n        alt: \"Work Image\",\n        width: window.innerWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blank\",\n        style: blanksize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (size === 'max' || 'card') {\n    imgbox = /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: workImgBox,\n      className: imgSize,\n      src: src,\n      alt: \"Work Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this);\n  } else {\n    imgbox = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: imgbox\n  }, void 0, false);\n}\n\n_s(WorkImageBox, \"5ajqqrEPFdYwtUWyNr2xu4op6Jw=\");\n\n_c = WorkImageBox;\nexport default WorkImageBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkImageBox\");","map":{"version":3,"sources":["/Users/dk/Desktop/works/Project/coding/dk_world_react/react-code/src/components/WorkImageBox.js"],"names":["React","useEffect","useRef","SIZES","over","max","card","imgbox","WorkImageBox","src","size","imgSize","workImgBox","blanksize","window","innerWidth","marginBottom","console","log","resizeBlankbox","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,oBADI;AAEVC,EAAAA,GAAG,EAAE,mBAFK;AAGVC,EAAAA,IAAI,EAAE;AAHI,CAAd;AAMA,IAAIC,MAAM,GAAG,IAAb;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAtB,EAAmC;AAAA;;AAC/B,QAAMC,OAAO,GAAGR,KAAK,CAACO,IAAD,CAArB;AACA,QAAME,UAAU,GAAGV,MAAM,CAAC,IAAD,CAAzB;AAEA,MAAIW,SAAS,GAAG,EAAhB;;AAEA,MAAGC,MAAM,CAACC,UAAP,IAAqB,GAAxB,EAA4B;AACxBF,IAAAA,SAAS,GAAG;AACRG,MAAAA,YAAY,EAAIF,MAAM,CAACC,UAAP,GAAkB,CAAnB,GAAsB,EAAtB,GAA2B;AADlC,KAAZ;AAGH,GAJD,MAIO,IAAID,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA4B;AAC/BF,IAAAA,SAAS,GAAG;AACRG,MAAAA,YAAY,EAAIF,MAAM,CAACC,UAAP,GAAkB,CAAnB,GAAsB,EAAtB,GAA2B;AADlC,KAAZ;AAGH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,UAAnB;AACH,GAFQ,CAAT;;AAIA,QAAMI,cAAc,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAGJ,MAAM,CAACC,UAAP,IAAqB,GAAxB,EAA4B;AACxBF,MAAAA,SAAS,GAAG;AACRG,QAAAA,YAAY,EAAIF,MAAM,CAACC,UAAP,GAAkB,CAAnB,GAAsB,EAAtB,GAA2B;AADlC,OAAZ;AAGH,KAJD,MAIO,IAAID,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA4B;AAC/BF,MAAAA,SAAS,GAAG;AACRG,QAAAA,YAAY,EAAIF,MAAM,CAACC,UAAP,GAAkB,CAAnB,GAAsB,EAAtB,GAA2B;AADlC,OAAZ;AAGH;AACJ,GAXD;;AAaAD,EAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,cAAlC;;AAEA,MAAGT,IAAI,KAAG,MAAV,EAAiB;AACbH,IAAAA,MAAM,gBACN;AAAA,8BACA;AAAK,QAAA,GAAG,EAAEK,UAAV;AAAsB,QAAA,SAAS,EAAED,OAAjC;AAA0C,QAAA,GAAG,EAAEF,GAA/C;AAAoD,QAAA,GAAG,EAAC,YAAxD;AAAqE,QAAA,KAAK,EAAEK,MAAM,CAACC;AAAnF;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADA;AAMH,GAPD,MAOO,IAAGH,IAAI,KAAG,KAAP,IAAgB,MAAnB,EAA2B;AAC9BH,IAAAA,MAAM,gBAAG;AAAK,MAAA,GAAG,EAAEK,UAAV;AAAsB,MAAA,SAAS,EAAED,OAAjC;AAA0C,MAAA,GAAG,EAAEF,GAA/C;AAAoD,MAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAAT;AACH,GAFM,MAEA;AACHF,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,sBACI;AAAA,cACCA;AADD,mBADJ;AAKH;;GApDQC,Y;;KAAAA,Y;AAsDT,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useRef} from 'react'\n\nconst SIZES = {\n    over: 'work-img--oversize',\n    max: 'work-img--maxsize',\n    card: 'work-img--cardsize'\n};\n\nvar imgbox = null;\n\nfunction WorkImageBox({src, size}) {\n    const imgSize = SIZES[size];\n    const workImgBox = useRef(null);\n\n    var blanksize = {};\n\n    if(window.innerWidth <= 960){\n        blanksize = {\n            marginBottom : (window.innerWidth*9)/16 + 180\n        };\n    } else if (window.innerWidth > 960){\n        blanksize = {\n            marginBottom : (window.innerWidth*9)/16 + 270\n        };\n    }\n\n    useEffect(() => {\n        console.log(window.innerWidth);\n    })\n\n    const resizeBlankbox = () => {\n        console.log(\"hello world\");\n        if(window.innerWidth <= 960){\n            blanksize = {\n                marginBottom : (window.innerWidth*9)/16 + 180\n            };\n        } else if (window.innerWidth > 960){\n            blanksize = {\n                marginBottom : (window.innerWidth*9)/16 + 270\n            };\n        }\n    }\n\n    window.addEventListener('resize', resizeBlankbox);\n\n    if(size==='over'){\n        imgbox = \n        <>\n        <img ref={workImgBox} className={imgSize} src={src} alt=\"Work Image\" width={window.innerWidth}/>\n        <div className=\"blank\" style={blanksize}></div>\n        </>\n\n    } else if(size==='max' || 'card') {\n        imgbox = <img ref={workImgBox} className={imgSize} src={src} alt=\"Work Image\" />\n    } else {\n        imgbox = null;\n    }\n    return (\n        <>\n        {imgbox}\n        </>\n    )\n}\n\nexport default WorkImageBox;\n"]},"metadata":{},"sourceType":"module"}